import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c as t,a as o,b as e,d as a,e as n}from"./app-f880015c.js";const r={},s={href:"https://mrhope.site/code/language/js/",target:"_blank",rel:"noopener noreferrer"},u=n('<h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><ul><li>JavaScript 的保留字：arguments、break、case、catch、class、const、continue、debugger、default、delete、do、else、enum、eval、export、extends、false、finally、for、function、if、implements、import、in、instanceof、interface、let、new、null、package、private、protected、public、return、static、super、switch、this、throw、true、try、typeof、var、void、while、with、yield</li><li>申明变量别用<code>var</code>，最好用<code>let</code>或<code>const</code>代替</li><li>最好用 strict 模式：在代码第一行加上<code>&#39;use strict&#39;;</code></li><li>转换为布尔值的结果： <ul><li>仅这些为<code>false</code>: <code>undefined</code>, <code>null</code>, <code>false</code>, <code>0</code>, <code>NaN</code>, <code>&quot;&quot;</code>, <code>&#39;&#39;</code></li><li>特别注意这些为<code>true</code>: <code>[]</code>, <code>{}</code></li></ul></li><li><code>NaN</code>与所有值都不相等，包括自己，只能用<code>isNaN(NaN);</code>判断</li><li>浮点数得用差的绝对值判断：<code>Math.abs(1 / 3 - (1 - 2 / 3)) &lt; 0.0000001;</code></li><li><code>for ... in</code>对数组循环得到的元素为字符串 <ul><li>遍历集合类型时用<code>for ... of</code>或<code>forEach()</code></li></ul></li><li>反引号对<code>``</code>可表示跨行字符串，且可以用模版<code>${}</code>填充多个字符变量</li><li>对象类似 python 的字典，且定义时最后的键值对后不加<code>,</code>，用<code>.</code>访问属性 <ul><li>若键为非法变量名，则需写成字符串形式，且用<code>[]</code>访问</li><li>访问不存在的属性返回<code>undefined</code></li></ul></li><li>ES6 添加了<code>Set</code>和<code>Map</code>数据类型</li></ul><h2 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h2><ul><li>坚持用<code>===</code>进行比较，避免<code>==</code>自动转换类型导致的错误 <ul><li><code>switch</code>内部采用的是<code>===</code></li></ul></li><li><code>typeof</code>可用于检查变量是否声明，<code>instanceof</code>可区分数组和对象</li></ul><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><ul><li>数组可同时含不同类型元素</li><li>可通过给<code>length</code>属性赋值改变数组长度，通过索引赋值时超范围也会改变数组长度（但最好别）</li><li>空数组<code>pop()</code>返回<code>undefined</code></li><li>在数组头添加/删除：<code>unshift()</code>/<code>shift()</code></li><li><code>splice()</code>: 在指定索引处开始删除若干元素，再添加若干元素</li><li><code>concat()</code>: 连接两个数组，并返回新数组（会将参数数组中的数组拆成单个元素）</li><li><code>join()</code>: 把数组元素用参数连成字符串</li></ul>',6);function h(f,p){const c=l("ExternalLinkIcon");return i(),t("div",null,[o("p",null,[e("学习的 "),o("a",s,[e("Mr.Hope 的教程"),a(c)]),e("，仅记录与 Java 不同且需要注意的地方")]),u])}const N=d(r,[["render",h],["__file","js_note.html.vue"]]);export{N as default};
