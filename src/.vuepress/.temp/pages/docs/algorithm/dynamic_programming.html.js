export const data = JSON.parse("{\"key\":\"v-d843ef0a\",\"path\":\"/docs/algorithm/dynamic_programming.html\",\"title\":\"动态规划\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"动态规划\",\"icon\":\"function\",\"category\":[\"algorithm\"],\"tag\":[\"DP\"],\"description\":\"基本类型 [不同的二叉搜索树][00] Description 给定整数n，求恰由n个节点组成且节点值从1到`n`互不相同的二叉搜索树数量 ::: details Solution 对于节点序列 $1, \\\\cdots, n$ ，可以遍历取特定数 $i$ 作为根节点，则左右子树节点序列为 $1, \\\\cdots, (i-1)$ 和 $(i+1),\\\\cdot...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://gragoyd.github.io/docs/algorithm/dynamic_programming.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Grag's Docs\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"动态规划\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"基本类型 [不同的二叉搜索树][00] Description 给定整数n，求恰由n个节点组成且节点值从1到`n`互不相同的二叉搜索树数量 ::: details Solution 对于节点序列 $1, \\\\cdots, n$ ，可以遍历取特定数 $i$ 作为根节点，则左右子树节点序列为 $1, \\\\cdots, (i-1)$ 和 $(i+1),\\\\cdot...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Grag\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"DP\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"动态规划\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Grag\\\",\\\"url\\\":\\\"https://github.com/gragoyd\\\",\\\"email\\\":\\\"gragoyd@icloud.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"基本类型\",\"slug\":\"基本类型\",\"link\":\"#基本类型\",\"children\":[{\"level\":3,\"title\":\"不同的二叉搜索树\",\"slug\":\"不同的二叉搜索树\",\"link\":\"#不同的二叉搜索树\",\"children\":[]},{\"level\":3,\"title\":\"打家劫舍 II\",\"slug\":\"打家劫舍-ii\",\"link\":\"#打家劫舍-ii\",\"children\":[]},{\"level\":3,\"title\":\"打家劫舍 III\",\"slug\":\"打家劫舍-iii\",\"link\":\"#打家劫舍-iii\",\"children\":[]},{\"level\":3,\"title\":\"整数拆分\",\"slug\":\"整数拆分\",\"link\":\"#整数拆分\",\"children\":[]},{\"level\":3,\"title\":\"最长递增子序列\",\"slug\":\"最长递增子序列\",\"link\":\"#最长递增子序列\",\"children\":[]},{\"level\":3,\"title\":\"环形子数组的最大和\",\"slug\":\"环形子数组的最大和\",\"link\":\"#环形子数组的最大和\",\"children\":[]},{\"level\":3,\"title\":\"鸡蛋掉落\",\"slug\":\"鸡蛋掉落\",\"link\":\"#鸡蛋掉落\",\"children\":[]}]},{\"level\":2,\"title\":\"字符串问题\",\"slug\":\"字符串问题\",\"link\":\"#字符串问题\",\"children\":[{\"level\":3,\"title\":\"两个字符串的删除操作\",\"slug\":\"两个字符串的删除操作\",\"link\":\"#两个字符串的删除操作\",\"children\":[]},{\"level\":3,\"title\":\"编辑距离\",\"slug\":\"编辑距离\",\"link\":\"#编辑距离\",\"children\":[]},{\"level\":3,\"title\":\"不同的子序列\",\"slug\":\"不同的子序列\",\"link\":\"#不同的子序列\",\"children\":[]},{\"level\":3,\"title\":\"最长回文子序列\",\"slug\":\"最长回文子序列\",\"link\":\"#最长回文子序列\",\"children\":[]}]},{\"level\":2,\"title\":\"股票问题\",\"slug\":\"股票问题\",\"link\":\"#股票问题\",\"children\":[{\"level\":3,\"title\":\"买卖股票的最佳时机 II\",\"slug\":\"买卖股票的最佳时机-ii\",\"link\":\"#买卖股票的最佳时机-ii\",\"children\":[]},{\"level\":3,\"title\":\"买卖股票的最佳时机 III\",\"slug\":\"买卖股票的最佳时机-iii\",\"link\":\"#买卖股票的最佳时机-iii\",\"children\":[]},{\"level\":3,\"title\":\"买卖股票的最佳时机 IV\",\"slug\":\"买卖股票的最佳时机-iv\",\"link\":\"#买卖股票的最佳时机-iv\",\"children\":[]},{\"level\":3,\"title\":\"最佳买卖股票时机含冷冻期\",\"slug\":\"最佳买卖股票时机含冷冻期\",\"link\":\"#最佳买卖股票时机含冷冻期\",\"children\":[]}]},{\"level\":2,\"title\":\"背包问题\",\"slug\":\"背包问题\",\"link\":\"#背包问题\",\"children\":[{\"level\":3,\"title\":\"组合总和 IV\",\"slug\":\"组合总和-iv\",\"link\":\"#组合总和-iv\",\"children\":[]},{\"level\":3,\"title\":\"目标和\",\"slug\":\"目标和\",\"link\":\"#目标和\",\"children\":[]},{\"level\":3,\"title\":\"零钱兑换\",\"slug\":\"零钱兑换\",\"link\":\"#零钱兑换\",\"children\":[]},{\"level\":3,\"title\":\"完全平方数\",\"slug\":\"完全平方数\",\"link\":\"#完全平方数\",\"children\":[]}]}],\"git\":{},\"readingTime\":{\"minutes\":25.71,\"words\":7712},\"filePathRelative\":\"docs/algorithm/dynamic_programming.md\",\"autoDesc\":true,\"excerpt\":\"\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
